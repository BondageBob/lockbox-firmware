<head>
    <link rel="stylesheet" href="https://unpkg.com/@picocss/pico@latest/css/pico.min.css">
    <link rel="stylesheet" href="style.scss">
    <meta name="viewport" content="width=device-width, initial-scale=1">
</head>


<script>
    window.onload = Init;

    function Init() {
        var lockform = document.getElementById('lockform');
        function onLockSubmit(event) {
            if (event) { event.preventDefault(); }
            Post(lockform, "/lock")
        }
        lockform.addEventListener('submit', onLockSubmit, false);
        lockform.submit = onLockSubmit;

        var unlockform = document.getElementById('unlockform');
        function onUnlockSubmit(event) {
            if (event) { event.preventDefault(); }
            Post(unlockform, "/unlock")
        }
        unlockform.addEventListener('submit', onUnlockSubmit, false);
        unlockform.submit = onUnlockSubmit;

        var settingsform = document.getElementById('settingsform');
        function onSettingsSubmit(event) {
            if (event) { event.preventDefault(); }
            Post(settingsform, "/settings")
        }
        settingsform.addEventListener('submit', onSettingsSubmit, false);
        settingsform.submit = onSettingsSubmit;

        var resetform = document.getElementById('resetform');
        function onResetSubmit(event) {
            if (event) { event.preventDefault(); }
            Post(resetform, "/reset")
        }
        resetform.addEventListener('submit', onResetSubmit, false);
        resetform.submit = onResetSubmit;

        UpdateBoxInfo();
    }

    function Post(form, endpoint) {
        var data = new FormData(form);
        var xhr = new XMLHttpRequest();
        xhr.open("POST", "%API_HOST%".concat(endpoint));
        xhr.onload = function () { console.log(this.response); };
        xhr.send(data);
        UpdateBoxInfo();
    }

    function DownloadKey() {
        var key = document.getElementById("lockformPassword").value;
        var element = document.createElement('a');
        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(key));
        element.setAttribute('download', "key.txt");
        element.style.display = 'none';
        document.body.appendChild(element);
        element.click();
        document.body.removeChild(element);
    }

    function GenerateKey(size) {
        var result = '';
        var characters = 'abcdefghkmnpqrstuvwxyz23456789';
        var charactersLength = characters.length;
        for (var i = 0; i < size; i++) {
            result += characters.charAt(Math.floor(Math.random() * charactersLength));
        }
        document.getElementById("lockformPassword").value = result;
    }

    function UpdateBoxInfo() {
        var xhr = new XMLHttpRequest();
        xhr.open("GET", "%API_HOST%".concat("/settings"));
        xhr.onload = function () {
            var response = JSON.parse(this.response)
            document.getElementById("settingsformName").value = response["data"]["name"];
            document.getElementById("settingsformOpenPosition").value = response["data"]["servo_open_position"];
            document.getElementById("settingsformClosedPosition").value = response["data"]["servo_closed_position"];
            if (response["data"]["locked"]) {
                document.getElementById("lockIndicator").innerHTML = "&#128274";
            }
            else {
                document.getElementById("lockIndicator").innerHTML = "&#128275";
            }
        };
        xhr.send();
    }
</script>

<body>
    <main class="container">
    <h1>EKI Lockbox <b id="lockIndicator"></b></h1>
        <article>
            <h2>Vault mode</h2>
            <section>
                <button onclick="GenerateKey(12)">Generate</button>
                <button onclick="DownloadKey()">Download</button>
                <form id="lockform">
                    <input id="lockformPassword" type="text" name="password" required autocomplete="off" />
                    <button type="submit">Lock</button>
                </form>
            </section>
            <section>
                <form id="unlockform">
                    <input id="unlockformPassword" type="text" name="password" required autocomplete="off" />
                    <button type="submit">Unlock</button>
                </form>
            </section>
        </article>
        <article>
            <h2>Box</h2>
            <section>
                <form id="settingsform">
                    <label for="settingsformName">Name</label>
                    <input id="settingsformName" type="text" name="name" autocomplete="off" />
                    <label for="settingsformOpenPosition">Open</label>
                    <input id="settingsformOpenPosition" type="number" name="servo_open_position" autocomplete="off" />
                    <label for="settingsformClosedPosition">Closed</label>
                    <input id="settingsformClosedPosition" type="number" name="servo_closed_position"
                        autocomplete="off" />
                    <br>
                    <button type="submit">Set</button>
                </form>
            </section>
            <section>
                <form id="resetform">
                    <button class="outline" type="submit">Reset</button>
                </form>
            </section>
        </article>
        <article>
            <h2>Dependencies</h2>
            <p>
                <a href="https://github.com/alanswx/ESPAsyncWiFiManager">ESPAsyncWiFiManger</a> (MIT)
                <br>
                <a href="https://github.com/me-no-dev/ESPAsyncWebServer">ESPAsyncWebServer</a> (LGPL v2.1)
                <br>
                <a href="https://github.com/madhephaestus/ESP32Servo">ESP32Servo</a> (LGPL v2.1)
                <br>
                <a href="https://github.com/bblanchon/ArduinoJson">ArduinoJson</a> (MIT)
            </p>
        </article>
    </main>
    <footer class="container">
        Brought to you by Embedded Kink Industries
    </footer>
</body>